// Code generated by goctl. DO NOT EDIT!
// Source: public_repo.proto

package server

import (
	"context"

	"gcloud/public_repo/rpc/internal/logic"
	"gcloud/public_repo/rpc/internal/svc"
	"gcloud/public_repo/rpc/public_repo"
)

type PublicRepoServer struct {
	svcCtx *svc.ServiceContext
	public_repo.UnimplementedPublicRepoServer
}

func NewPublicRepoServer(svcCtx *svc.ServiceContext) *PublicRepoServer {
	return &PublicRepoServer{
		svcCtx: svcCtx,
	}
}

func (s *PublicRepoServer) PublicFileDelete(ctx context.Context, in *public_repo.UserFileDeleteRequest) (*public_repo.UserFileDeleteReply, error) {
	l := logic.NewPublicFileDeleteLogic(ctx, s.svcCtx)
	return l.PublicFileDelete(in)
}

func (s *PublicRepoServer) PublicFileList(ctx context.Context, in *public_repo.PublicFileListRequest) (*public_repo.PublicFileListReply, error) {
	l := logic.NewPublicFileListLogic(ctx, s.svcCtx)
	return l.PublicFileList(in)
}

func (s *PublicRepoServer) PublicFileNameUpdate(ctx context.Context, in *public_repo.UserFileNameUpdateRequest) (*public_repo.UserFileNameUpdateReply, error) {
	l := logic.NewPublicFileNameUpdateLogic(ctx, s.svcCtx)
	return l.PublicFileNameUpdate(in)
}

func (s *PublicRepoServer) PublicFolderCreate(ctx context.Context, in *public_repo.UserFolderCreateRequest) (*public_repo.UserFolderCreateReply, error) {
	l := logic.NewPublicFolderCreateLogic(ctx, s.svcCtx)
	return l.PublicFolderCreate(in)
}

func (s *PublicRepoServer) PublicFileSave(ctx context.Context, in *public_repo.PublicRepositorySaveRequest) (*public_repo.PublicRepositorySaveReply, error) {
	l := logic.NewPublicFileSaveLogic(ctx, s.svcCtx)
	return l.PublicFileSave(in)
}
