// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: fileud.proto

package fileud

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Path string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Ext  string `protobuf:"bytes,5,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *FileUploadRequest) Reset() {
	*x = FileUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadRequest) ProtoMessage() {}

func (x *FileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadRequest.ProtoReflect.Descriptor instead.
func (*FileUploadRequest) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{0}
}

func (x *FileUploadRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *FileUploadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileUploadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileUploadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileUploadRequest) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

type FileUploadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Ext      string `protobuf:"bytes,2,opt,name=ext,proto3" json:"ext,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Msg      string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	Code     int32  `protobuf:"varint,5,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *FileUploadReply) Reset() {
	*x = FileUploadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadReply) ProtoMessage() {}

func (x *FileUploadReply) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadReply.ProtoReflect.Descriptor instead.
func (*FileUploadReply) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{1}
}

func (x *FileUploadReply) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *FileUploadReply) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *FileUploadReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileUploadReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileUploadReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type FileDownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Path string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Ext  string `protobuf:"bytes,5,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *FileDownloadRequest) Reset() {
	*x = FileDownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRequest) ProtoMessage() {}

func (x *FileDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRequest.ProtoReflect.Descriptor instead.
func (*FileDownloadRequest) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{2}
}

func (x *FileDownloadRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *FileDownloadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileDownloadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileDownloadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileDownloadRequest) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

type FileDownloadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Code int32  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *FileDownloadReply) Reset() {
	*x = FileDownloadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDownloadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadReply) ProtoMessage() {}

func (x *FileDownloadReply) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadReply.ProtoReflect.Descriptor instead.
func (*FileDownloadReply) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{3}
}

func (x *FileDownloadReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileDownloadReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileDownloadReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type FileUploadChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FileUploadChunkRequest) Reset() {
	*x = FileUploadChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadChunkRequest) ProtoMessage() {}

func (x *FileUploadChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadChunkRequest.ProtoReflect.Descriptor instead.
func (*FileUploadChunkRequest) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{4}
}

type FileUploadChunkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etag string `protobuf:"bytes,1,opt,name=etag,proto3" json:"etag,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Code int32  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *FileUploadChunkReply) Reset() {
	*x = FileUploadChunkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadChunkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadChunkReply) ProtoMessage() {}

func (x *FileUploadChunkReply) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadChunkReply.ProtoReflect.Descriptor instead.
func (*FileUploadChunkReply) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{5}
}

func (x *FileUploadChunkReply) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *FileUploadChunkReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileUploadChunkReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type FileUploadChunkCompleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	UploadId   string       `protobuf:"bytes,2,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	CosObjects []*CosObject `protobuf:"bytes,3,rep,name=cos_objects,json=cosObjects,proto3" json:"cos_objects,omitempty"`
}

func (x *FileUploadChunkCompleteRequest) Reset() {
	*x = FileUploadChunkCompleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadChunkCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadChunkCompleteRequest) ProtoMessage() {}

func (x *FileUploadChunkCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadChunkCompleteRequest.ProtoReflect.Descriptor instead.
func (*FileUploadChunkCompleteRequest) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{6}
}

func (x *FileUploadChunkCompleteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FileUploadChunkCompleteRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *FileUploadChunkCompleteRequest) GetCosObjects() []*CosObject {
	if x != nil {
		return x.CosObjects
	}
	return nil
}

type FileUploadChunkCompleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *FileUploadChunkCompleteReply) Reset() {
	*x = FileUploadChunkCompleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadChunkCompleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadChunkCompleteReply) ProtoMessage() {}

func (x *FileUploadChunkCompleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadChunkCompleteReply.ProtoReflect.Descriptor instead.
func (*FileUploadChunkCompleteReply) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{7}
}

func (x *FileUploadChunkCompleteReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileUploadChunkCompleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type FileUploadPrepareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Md5  string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ext  string `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext,omitempty"`
}

func (x *FileUploadPrepareRequest) Reset() {
	*x = FileUploadPrepareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadPrepareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadPrepareRequest) ProtoMessage() {}

func (x *FileUploadPrepareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadPrepareRequest.ProtoReflect.Descriptor instead.
func (*FileUploadPrepareRequest) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{8}
}

func (x *FileUploadPrepareRequest) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *FileUploadPrepareRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileUploadPrepareRequest) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

type FileUploadPrepareReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	UploadId string `protobuf:"bytes,2,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Msg      string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	Code     int32  `protobuf:"varint,5,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *FileUploadPrepareReply) Reset() {
	*x = FileUploadPrepareReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUploadPrepareReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadPrepareReply) ProtoMessage() {}

func (x *FileUploadPrepareReply) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadPrepareReply.ProtoReflect.Descriptor instead.
func (*FileUploadPrepareReply) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{9}
}

func (x *FileUploadPrepareReply) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *FileUploadPrepareReply) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *FileUploadPrepareReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FileUploadPrepareReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileUploadPrepareReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type CosObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartNumber int32  `protobuf:"varint,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	Etag       string `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (x *CosObject) Reset() {
	*x = CosObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileud_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosObject) ProtoMessage() {}

func (x *CosObject) ProtoReflect() protoreflect.Message {
	mi := &file_fileud_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosObject.ProtoReflect.Descriptor instead.
func (*CosObject) Descriptor() ([]byte, []int) {
	return file_fileud_proto_rawDescGZIP(), []int{10}
}

func (x *CosObject) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *CosObject) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

var File_fileud_proto protoreflect.FileDescriptor

var file_fileud_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x22, 0x75, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x79, 0x0a,
	0x0f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x77, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78,
	0x74, 0x22, 0x4d, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x18, 0x0a, 0x16, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x14, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x83, 0x01, 0x0a,
	0x1e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x0b, 0x63, 0x6f, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x2e, 0x43, 0x6f, 0x73,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x73, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x22, 0x44, 0x0a, 0x1c, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x18, 0x46, 0x69, 0x6c, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0x89, 0x01, 0x0a,
	0x16, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x40, 0x0a, 0x09, 0x43, 0x6f, 0x73, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x32, 0xa3, 0x03, 0x0a, 0x06, 0x46,
	0x69, 0x6c, 0x65, 0x75, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x19, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x46, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x4f, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x12, 0x1e, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x67, 0x0a, 0x17, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x75, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x55, 0x0a, 0x11, 0x46, 0x69, 0x6c,
	0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x20,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x75, 0x64, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fileud_proto_rawDescOnce sync.Once
	file_fileud_proto_rawDescData = file_fileud_proto_rawDesc
)

func file_fileud_proto_rawDescGZIP() []byte {
	file_fileud_proto_rawDescOnce.Do(func() {
		file_fileud_proto_rawDescData = protoimpl.X.CompressGZIP(file_fileud_proto_rawDescData)
	})
	return file_fileud_proto_rawDescData
}

var file_fileud_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_fileud_proto_goTypes = []interface{}{
	(*FileUploadRequest)(nil),              // 0: fileud.FileUploadRequest
	(*FileUploadReply)(nil),                // 1: fileud.FileUploadReply
	(*FileDownloadRequest)(nil),            // 2: fileud.FileDownloadRequest
	(*FileDownloadReply)(nil),              // 3: fileud.FileDownloadReply
	(*FileUploadChunkRequest)(nil),         // 4: fileud.FileUploadChunkRequest
	(*FileUploadChunkReply)(nil),           // 5: fileud.FileUploadChunkReply
	(*FileUploadChunkCompleteRequest)(nil), // 6: fileud.FileUploadChunkCompleteRequest
	(*FileUploadChunkCompleteReply)(nil),   // 7: fileud.FileUploadChunkCompleteReply
	(*FileUploadPrepareRequest)(nil),       // 8: fileud.FileUploadPrepareRequest
	(*FileUploadPrepareReply)(nil),         // 9: fileud.FileUploadPrepareReply
	(*CosObject)(nil),                      // 10: fileud.CosObject
}
var file_fileud_proto_depIdxs = []int32{
	10, // 0: fileud.FileUploadChunkCompleteRequest.cos_objects:type_name -> fileud.CosObject
	0,  // 1: fileud.Fileud.FileUpload:input_type -> fileud.FileUploadRequest
	2,  // 2: fileud.Fileud.FileDownload:input_type -> fileud.FileDownloadRequest
	4,  // 3: fileud.Fileud.FileUploadChunk:input_type -> fileud.FileUploadChunkRequest
	6,  // 4: fileud.Fileud.FileUploadChunkComplete:input_type -> fileud.FileUploadChunkCompleteRequest
	8,  // 5: fileud.Fileud.FileUploadPrepare:input_type -> fileud.FileUploadPrepareRequest
	1,  // 6: fileud.Fileud.FileUpload:output_type -> fileud.FileUploadReply
	3,  // 7: fileud.Fileud.FileDownload:output_type -> fileud.FileDownloadReply
	5,  // 8: fileud.Fileud.FileUploadChunk:output_type -> fileud.FileUploadChunkReply
	7,  // 9: fileud.Fileud.FileUploadChunkComplete:output_type -> fileud.FileUploadChunkCompleteReply
	9,  // 10: fileud.Fileud.FileUploadPrepare:output_type -> fileud.FileUploadPrepareReply
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_fileud_proto_init() }
func file_fileud_proto_init() {
	if File_fileud_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fileud_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileud_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileud_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileud_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDownloadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileud_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileud_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadChunkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileud_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadChunkCompleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileud_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadChunkCompleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileud_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadPrepareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileud_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileUploadPrepareReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileud_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fileud_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fileud_proto_goTypes,
		DependencyIndexes: file_fileud_proto_depIdxs,
		MessageInfos:      file_fileud_proto_msgTypes,
	}.Build()
	File_fileud_proto = out.File
	file_fileud_proto_rawDesc = nil
	file_fileud_proto_goTypes = nil
	file_fileud_proto_depIdxs = nil
}
