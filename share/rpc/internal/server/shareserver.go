// Code generated by goctl. DO NOT EDIT!
// Source: share.proto

package server

import (
	"context"

	"gcloud/share/rpc/internal/logic"
	"gcloud/share/rpc/internal/svc"
	"gcloud/share/rpc/share"
)

type ShareServer struct {
	svcCtx *svc.ServiceContext
	share.UnimplementedShareServer
}

func NewShareServer(svcCtx *svc.ServiceContext) *ShareServer {
	return &ShareServer{
		svcCtx: svcCtx,
	}
}

func (s *ShareServer) ShareBasicDetail(ctx context.Context, in *share.ShareBasicDetailRequest) (*share.ShareBasicDetailReply, error) {
	l := logic.NewShareBasicDetailLogic(ctx, s.svcCtx)
	return l.ShareBasicDetail(in)
}

func (s *ShareServer) PopularShareList(ctx context.Context, in *share.PopularShareListRequest) (*share.PopularShareListReply, error) {
	l := logic.NewPopularShareListLogic(ctx, s.svcCtx)
	return l.PopularShareList(in)
}

func (s *ShareServer) ShareStatistics(ctx context.Context, in *share.ShareStatisticsRequest) (*share.ShareStatisticsReply, error) {
	l := logic.NewShareStatisticsLogic(ctx, s.svcCtx)
	return l.ShareStatistics(in)
}

func (s *ShareServer) ShareBasicCreate(ctx context.Context, in *share.ShareBasicCreateRequest) (*share.ShareBasicCreateReply, error) {
	l := logic.NewShareBasicCreateLogic(ctx, s.svcCtx)
	return l.ShareBasicCreate(in)
}

func (s *ShareServer) ShareBasicSave(ctx context.Context, in *share.ShareBasicSaveRequest) (*share.ShareBasicSaveReply, error) {
	l := logic.NewShareBasicSaveLogic(ctx, s.svcCtx)
	return l.ShareBasicSave(in)
}

func (s *ShareServer) UserShareList(ctx context.Context, in *share.UserShareListRequest) (*share.UserShareListReply, error) {
	l := logic.NewUserShareListLogic(ctx, s.svcCtx)
	return l.UserShareList(in)
}
