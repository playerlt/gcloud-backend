// Code generated by goctl. DO NOT EDIT!
// Source: share.proto

package shareclient

import (
	"context"

	"gcloud/share/rpc/share"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PopularShareListReply   = share.PopularShareListReply
	PopularShareListRequest = share.PopularShareListRequest
	ShareBasicCreateReply   = share.ShareBasicCreateReply
	ShareBasicCreateRequest = share.ShareBasicCreateRequest
	ShareBasicDetailReply   = share.ShareBasicDetailReply
	ShareBasicDetailRequest = share.ShareBasicDetailRequest
	ShareBasicSaveReply     = share.ShareBasicSaveReply
	ShareBasicSaveRequest   = share.ShareBasicSaveRequest
	ShareStatisticsReply    = share.ShareStatisticsReply
	ShareStatisticsRequest  = share.ShareStatisticsRequest
	UserShareListReply      = share.UserShareListReply
	UserShareListRequest    = share.UserShareListRequest

	Share interface {
		ShareBasicDetail(ctx context.Context, in *ShareBasicDetailRequest, opts ...grpc.CallOption) (*ShareBasicDetailReply, error)
		PopularShareList(ctx context.Context, in *PopularShareListRequest, opts ...grpc.CallOption) (*PopularShareListReply, error)
		ShareStatistics(ctx context.Context, in *ShareStatisticsRequest, opts ...grpc.CallOption) (*ShareStatisticsReply, error)
		ShareBasicCreate(ctx context.Context, in *ShareBasicCreateRequest, opts ...grpc.CallOption) (*ShareBasicCreateReply, error)
		ShareBasicSave(ctx context.Context, in *ShareBasicSaveRequest, opts ...grpc.CallOption) (*ShareBasicSaveReply, error)
		UserShareList(ctx context.Context, in *UserShareListRequest, opts ...grpc.CallOption) (*UserShareListReply, error)
	}

	defaultShare struct {
		cli zrpc.Client
	}
)

func NewShare(cli zrpc.Client) Share {
	return &defaultShare{
		cli: cli,
	}
}

func (m *defaultShare) ShareBasicDetail(ctx context.Context, in *ShareBasicDetailRequest, opts ...grpc.CallOption) (*ShareBasicDetailReply, error) {
	client := share.NewShareClient(m.cli.Conn())
	return client.ShareBasicDetail(ctx, in, opts...)
}

func (m *defaultShare) PopularShareList(ctx context.Context, in *PopularShareListRequest, opts ...grpc.CallOption) (*PopularShareListReply, error) {
	client := share.NewShareClient(m.cli.Conn())
	return client.PopularShareList(ctx, in, opts...)
}

func (m *defaultShare) ShareStatistics(ctx context.Context, in *ShareStatisticsRequest, opts ...grpc.CallOption) (*ShareStatisticsReply, error) {
	client := share.NewShareClient(m.cli.Conn())
	return client.ShareStatistics(ctx, in, opts...)
}

func (m *defaultShare) ShareBasicCreate(ctx context.Context, in *ShareBasicCreateRequest, opts ...grpc.CallOption) (*ShareBasicCreateReply, error) {
	client := share.NewShareClient(m.cli.Conn())
	return client.ShareBasicCreate(ctx, in, opts...)
}

func (m *defaultShare) ShareBasicSave(ctx context.Context, in *ShareBasicSaveRequest, opts ...grpc.CallOption) (*ShareBasicSaveReply, error) {
	client := share.NewShareClient(m.cli.Conn())
	return client.ShareBasicSave(ctx, in, opts...)
}

func (m *defaultShare) UserShareList(ctx context.Context, in *UserShareListRequest, opts ...grpc.CallOption) (*UserShareListReply, error) {
	client := share.NewShareClient(m.cli.Conn())
	return client.UserShareList(ctx, in, opts...)
}
