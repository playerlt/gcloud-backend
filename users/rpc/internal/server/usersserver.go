// Code generated by goctl. DO NOT EDIT!
// Source: users.proto

package server

import (
	"context"

	"gcloud/users/rpc/internal/logic"
	"gcloud/users/rpc/internal/svc"
	"gcloud/users/rpc/users"
)

type UsersServer struct {
	svcCtx *svc.ServiceContext
	users.UnimplementedUsersServer
}

func NewUsersServer(svcCtx *svc.ServiceContext) *UsersServer {
	return &UsersServer{
		svcCtx: svcCtx,
	}
}

func (s *UsersServer) UserUpdate(ctx context.Context, in *users.UserUpdateRequest) (*users.UserUpdateReply, error) {
	l := logic.NewUserUpdateLogic(ctx, s.svcCtx)
	return l.UserUpdate(in)
}

func (s *UsersServer) RefreshAuthorization(ctx context.Context, in *users.RefreshAuthorizationRequest) (*users.RefreshAuthorizationReply, error) {
	l := logic.NewRefreshAuthorizationLogic(ctx, s.svcCtx)
	return l.RefreshAuthorization(in)
}

func (s *UsersServer) RegisterCount(ctx context.Context, in *users.RegisterCountRequest) (*users.RegisterCountReply, error) {
	l := logic.NewRegisterCountLogic(ctx, s.svcCtx)
	return l.RegisterCount(in)
}

func (s *UsersServer) UserDetail(ctx context.Context, in *users.UserDetailRequest) (*users.UserDetailReply, error) {
	l := logic.NewUserDetailLogic(ctx, s.svcCtx)
	return l.UserDetail(in)
}

func (s *UsersServer) UserLogin(ctx context.Context, in *users.LoginRequest) (*users.LoginReply, error) {
	l := logic.NewUserLoginLogic(ctx, s.svcCtx)
	return l.UserLogin(in)
}

func (s *UsersServer) UserRegister(ctx context.Context, in *users.UserRegisterRequest) (*users.UserRegisterReply, error) {
	l := logic.NewUserRegisterLogic(ctx, s.svcCtx)
	return l.UserRegister(in)
}
